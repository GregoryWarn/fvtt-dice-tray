@import "mixins";
@import "popout";
@import "grimwild";

#ui-right,
#sidebar-content {
	.dice-tray {
		pointer-events: all;
	}
}

#chat-popout,
#sidebar-content {
	.dice-tray {
		margin-top: -6px;
	}
}

.dice-tray {
	.dice-tray__stacked {
		height: 30px;
		button {
			min-height: initial;
		}
	}
	.dice-tray__buttons, .dice-tray__math, .dice-tray__input {
		height: 30px;
	}
	.dice-tray__math__buttons {
		margin-top: 2px;
	}
	.flexrow {
		flex-wrap: nowrap;
	}
	button {
		@extend %dice-tray-style;
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: center;
		position: relative;
		height: inherit;
		min-height: 1rem;
		&:focus {
			outline: none;
		}
		&:hover {
			color: $orange;
			div.dice {
				background-color: var(--color-light-1);
			}
		}
		svg {
			width: 100%;
			height: auto;
			transition: all ease-in-out 0.25s;
			* {
				fill: $white;
			}
		}
		img {
			border: none;
		}
		div.dice {
			height: 100%;
			aspect-ratio: 1/1;
			background-color: var(--color-light-2);
		}
		.dice-tray__flag {
			position: absolute;
			bottom: calc(100% - 2px);
			left: 0;
			right: 0;
			font-size: 14px;
			height: 18px;
			line-height: 1;
			background-color: $orange;
			color: $white;
			display: flex;
			align-items: center;
			justify-content: center;
			border-radius: 4px 4px 0 0;
			max-height: 18px;
			transition: all ease-in-out 0.15s;
			&:hover {
				background-color: $orange;
				color: $white;
			}
			&:focus {
				background-color: $orange;
				color: $white;
			}
			&.hide {
				max-height: 0;
			}
		}
		&.dice-tray__button {
			div.dice + span.dice-label {
				padding-right: 0.25rem;
			}
		}
		&.dice-tray__roll {
			&:hover {
				@include hover-style($orange);
			}
		}
		&.dice-tray__math--sub {
			&:hover {
				@include hover-style($orange);
			}
		}
		&.dice-tray__math--add {
			&:hover {
				background: $green;
				box-shadow: 0 0 6px inset $green;
				border-color: $green;
				color: $white;
			}
		}
		&.dice-tray__ad {
			font-size: 10px;
			flex: 1;
			line-height: 1;
			text-transform: uppercase;
		}
		&.dice-tray__advantage {
			&:hover {
				@include hover-style($green, true);
			}
			&.active {
				@include active-style($green);
			}
		}
		&.dice-tray__disadvantage {
			&:hover {
				@include hover-style($orange, true);
			}
			&.active {
				@include active-style($orange);
			}
		}
	}
	input[type="text"] {
		@extend %dice-tray-style;
		display: block;
		color: $white;
		text-align: center;
		&:hover {
			border-color: $orange;
		}
		&:focus {
			background: var(--color-cool-5);
			border-color: $orange;
			box-shadow: 0 0 6px inset $orange;
		}
	}
}
.dice-tray-row-settings {
	.sidebar-preview {
		display: flex;
		flex-direction: column;
		flex-wrap: nowrap;
		justify-content: flex-start;
		width: var(--sidebar-width);
		margin: auto;
	}
}

body:has(#interface.theme-light) {
	.application {
		@include dice-tray-theme;
	}
}
#interface {
	&.theme-light {
		@include dice-tray-theme;
	}
}
